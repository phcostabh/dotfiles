[color]
    ui = true
[user]
    name = Philippe
    email = philippescosta@gmail.com
[giggle]
    main-window-maximized = true
    main-window-geometry = 471x190+0+54
    main-window-view = FileView
    file-view-vpane-position = 406
    history-view-vpane-position = 485
    file-view-hpane-position = 294
[core]
    editor = vim
[alias]
    graph = log --all --graph --decorate --oneline -n30
    ls = log --pretty=format:\"%C(yellow)%h%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate
    ll = log --pretty=format:\"%C(yellow)%h%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate --numstat
    lds = log --pretty=format:\"%C(yellow)%h\\\\ %ad%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate --date=short
    ld = log --pretty=format:\"%C(yellow)%h\\\\ %ad%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate --date=relative
    le = log --oneline --decorate
    dl = !git ll -1
    f = "!git ls-files | grep -i"
    gr = grep -Ii
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --color --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"
    cp = cherry-pick
    st = status -s
    cl = clone
    ci = commit
    co = checkout
    br = branch
    diff = diff --word-diff
    dc = diff --cached
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard
    done = !git fetch && git rebase origin/master && git checkout master && git merge @{-1} && git push -u
    up = !git fetch origin && git rebase origin/master
    a = !git add -u && git add . && git status
    rmb = !sh -c 'git branch -D $1 && git push origin :$1' -
    cleanup = !git remote prune origin && git gc && git clean -dfx && git stash clear
    deleted = log --diff-filter=D --summary
