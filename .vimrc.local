" ---------------------------------------------------------------------------------------------------"
" UI Configuration
" ---------------------------------------------------------------------------------------------------"
colorscheme darkspectrum
set guifont=Liberation\ Mono\ 09
set linespace=6
set nospell
set t_Co=256
set bg=dark
nnoremap ; :
set nofoldenable

" ---------------------------------------------------------------------------------------------------"
" vim-php-cs-fixer configuration
" ---------------------------------------------------------------------------------------------------"
autocmd FileType php noremap <buffer>  <c-f> :call PhpCsFixerFixFile()<cr>

" ---------------------------------------------------------------------------------------------------"
" vim-jsbeautify
" ---------------------------------------------------------------------------------------------------"
autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>

" ---------------------------------------------------------------------------------------------------"
" Gist vim configurations
" ---------------------------------------------------------------------------------------------------"
let g:gist_clip_command = 'xclip -selection clipboard'

" ---------------------------------------------------------------------------------------------------"
" Customisations based on house-style (arbitrary)
" ---------------------------------------------------------------------------------------------------"
autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab

" ---------------------------------------------------------------------------------------------------"
" Key mappings
" ---------------------------------------------------------------------------------------------------"
map <Leader>r :!js-beautify -r %<CR>
nmap <F8> :TagbarToggle<CR>

" ---------------------------------------------------------------------------------------------------"
" Avoid backup
" ---------------------------------------------------------------------------------------------------"
set nobackup
set noswapfile

" ---------------------------------------------------------------------------------------------------"
" Integrating with powerline fonts
" ---------------------------------------------------------------------------------------------------"
let g:airline_powerline_fonts = 1

" ---------------------------------------------------------------------------------------------------"
" Disable auto PHPFolding
" ---------------------------------------------------------------------------------------------------"
let g:DisableAutoPHPFolding=1

" ---------------------------------------------------------------------------------------------------"
" Custom syntaxe highlighting.
" ---------------------------------------------------------------------------------------------------"
au BufRead,BufNewFile *.volt setfiletype htmljinja

" ---------------------------------------------------------------------------------------------------"
" Custom syntaxe highlighting.
" ---------------------------------------------------------------------------------------------------"
nnoremap <C-k> :CtrlPBufTag<CR>
"let g:ctrlp_buftag_types = {
"\ 'php': '--PHP-kinds=+f-vc --regex-PHP="/(public\s+|static\s+|abstract\s+|protected\s+|private\s+)function\s+\&?\s*([^ (]+)/\2/f/"'
"\}

" ---------------------------------------------------------------------------------------------------"
" Striping whitespaces
" ---------------------------------------------------------------------------------------------------"
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

autocmd BufWritePre *.* :call <SID>StripTrailingWhitespaces()

" ---------------------------------------------------------------------------------------------------"
" Remapping tab navigation
" ---------------------------------------------------------------------------------------------------"
nmap <S-h> :tabprevious <CR>
nmap <S-l> :tabnext <CR>

" ---------------------------------------------------------------------------------------------------"
" Unset hidden
" ---------------------------------------------------------------------------------------------------"
set nohidden

" ---------------------------------------------------------------------------------------------------"
" Surrounding mappings.
" ---------------------------------------------------------------------------------------------------"
:nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
:nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel

" ---------------------------------------------------------------------------------------------------"
" Remove bundles
" ---------------------------------------------------------------------------------------------------"
if exists('*UnBundle')
    UnBundle 'derekwyatt/vim-scala'
    UnBundle 'derekwyatt/vim-sbt'
    UnBundle 'jnwhiteh/vim-golang'
    UnBundle 'spf13/vim-gocode'
    UnBundle 'tpope/vim-haml'
    UnBundle 'tpope/vim-cucumber'
    UnBundle 'altercation/vim-colors-solarized'
    UnBundle 'nathanaelkane/vim-indent-guides'
    UnBundle 'klen/python-mode'
    UnBundle 'python.vim'
    UnBundle 'python_match.vim'
    UnBundle 'pythoncomplete'
endif
