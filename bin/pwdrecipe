#!/usr/bin/env node

const site = process.argv[2]
const phrase = process.argv[3]

const specialChars = [')', '!', '@', '#', '$', '%', '^', '&', '*', '(']

const Identity = x => ({
  chain: f => f(x),
  map: f => Identity(f(x)),
  fold: f => f(x),
  inspect: () => `Box(${x})`
})

const phraseInitials = phrase =>
  Identity(phrase)
    .map(p => p.split(' '))
    .map(pieces => pieces.map(p => p[0].toLowerCase()).join(''))

const consonantsUpcased = site =>
  Identity(site)
    .map(s => s.substr(0, s.indexOf('.')))
    .map(s => s.replace(/[aeiou]/g, ''))
    .map(s => s.toUpperCase())

const recipe = (site, phrase) =>
  phraseInitials(phrase).chain(initials =>
    consonantsUpcased(site).fold(consonants => initials + consonants)
  )

const domain = site.indexOf('.')
const wordsAfter = site.slice(site.lastIndexOf('.')).length - 1
const wordsMultiplied = domain * wordsAfter
const remainingCharsCount = domain - wordsAfter

const numbersAsSpecialChars = n =>
  Array.from(String(n))
    .map(i => specialChars[i])
    .join('')

console.log(wordsMultiplied + recipe(site, phrase) + remainingCharsCount)
